// search for the first node in abstract syntax tree generated by esprima
export function findFirstNodeInAst(object: any, type: string): any | null {
  if (object.type == type) {
    return object;
  } else if (object.body || object.length) {
    let result = null;
    for (const obj of (object.body ? (object.body.length ? object.body : object.body.body) : object)) {
      if (obj.type === 'VariableDeclaration') {
        result = findFirstNodeInAst(obj.declarations, type);
      } else if (obj.type === 'VariableDeclarator') {
        result = findFirstNodeInAst(obj.init, type);
      } else {
        result = findFirstNodeInAst(obj, type);
      }
      if (result) break;
    }
    return result;
  }
  return null;
}